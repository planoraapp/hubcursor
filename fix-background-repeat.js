const fs = require('fs');
const path = require('path');

// Lista de arquivos que precisam ser corrigidos
const filesToFix = [
  'src/pages/AltCodes.tsx',
  'src/pages/AvatarEditor.tsx',
  'src/pages/Catalogo.tsx',
  'src/pages/Emblemas.tsx',
  'src/pages/Eventos.tsx',
  'src/pages/HanditemCatalog.tsx',
  'src/pages/Mercado.tsx',
  'src/pages/Noticias.tsx',
  'src/pages/NotFound.tsx',
  'src/components/HabboHomeRedirect.tsx'
];

function fixFile(filePath) {
  try {
    let content = fs.readFileSync(filePath, 'utf8');
    
    // Padr√£o para encontrar bg-repeat com style inline
    const pattern = /className="([^"]*bg-repeat[^"]*)"\s+style=\{\{\s*backgroundImage:\s*['"]url\([^)]+\)['"]\s*\}\}/g;
    
    // Substitui√ß√£o com backgroundRepeat: 'repeat'
    const replacement = 'className="$1" style={{ \n        backgroundImage: \'url(/assets/bghabbohub.png)\',\n        backgroundRepeat: \'repeat\'\n      }}';
    
    const newContent = content.replace(pattern, replacement);
    
    if (newContent !== content) {
      fs.writeFileSync(filePath, newContent, 'utf8');
      console.log(`‚úÖ Corrigido: ${filePath}`);
    } else {
      console.log(`‚ÑπÔ∏è  Nenhuma mudan√ßa necess√°ria: ${filePath}`);
    }
  } catch (error) {
    console.error(`‚ùå Erro ao processar ${filePath}:`, error.message);
  }
}

console.log('üîß Iniciando corre√ß√£o autom√°tica dos backgrounds...\n');

filesToFix.forEach(fixFile);

console.log('\n‚ú® Corre√ß√£o conclu√≠da!');
console.log('üí° Execute "npm run build" para verificar se tudo est√° funcionando.');

