-- Função para criar usuário admin contornando constraints
CREATE OR REPLACE FUNCTION create_admin_user(user_id UUID, user_email TEXT)
RETURNS VOID
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
  -- Tentar inserir usuário na tabela auth.users
  INSERT INTO auth.users (
    id,
    email,
    encrypted_password,
    email_confirmed_at,
    created_at,
    updated_at,
    raw_app_meta_data,
    raw_user_meta_data,
    is_super_admin,
    role,
    aud,
    confirmation_token,
    recovery_token,
    email_change_token_new,
    email_change,
    last_sign_in_at,
    confirmation_sent_at,
    recovery_sent_at,
    email_change_sent_at,
    phone_change,
    phone_change_token,
    phone_change_sent_at,
    phone_confirmed_at,
    phone,
    phone_confirmed_at,
    phone_change_sent_at,
    confirmed_at,
    email_change_confirm_status,
    banned_until,
    reauthentication_token,
    reauthentication_sent_at,
    is_sso_user,
    deleted_at,
    is_anonymous
  ) VALUES (
    user_id,
    user_email,
    '$2a$10$dummy.hash.for.admin.user',
    NOW(),
    NOW(),
    NOW(),
    '{"habbo_name": "habbohub"}',
    '{"habbo_name": "habbohub"}',
    false,
    'authenticated',
    'authenticated',
    '',
    '',
    '',
    '',
    NULL,
    NULL,
    NULL,
    NULL,
    '',
    '',
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NOW(),
    0,
    NULL,
    '',
    NULL,
    false,
    NULL,
    false
  ) ON CONFLICT (id) DO NOTHING;
END;
$$;
